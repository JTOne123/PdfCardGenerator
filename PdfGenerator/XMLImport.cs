//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Dieser Quellcode wurde automatisch generiert von xsd, Version=4.6.1055.0.
// 
namespace Serilizer {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd", IsNullable=false)]
    public partial class Project {
        
        private ProjectTemplate[] templateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Template")]
        public ProjectTemplate[] Template {
            get {
                return this.templateField;
            }
            set {
                this.templateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public partial class ProjectTemplate {
        
        private BaseElement[] itemsField;
        
        private string contextField;
        
        private string widthField;
        
        private string heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Image", typeof(ImageElement))]
        [System.Xml.Serialization.XmlElementAttribute("Text", typeof(TextElement))]
        public BaseElement[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public partial class ImageElement : BaseElement {
        
        private string imageLocationPathField;
        
        private string imageLocationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ImageLocationPath {
            get {
                return this.imageLocationPathField;
            }
            set {
                this.imageLocationPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ImageLocation {
            get {
                return this.imageLocationField;
            }
            set {
                this.imageLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ImageElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public abstract partial class BaseElement {
        
        private string leftField;
        
        private string topField;
        
        private string widthField;
        
        private string heightField;
        
        private bool isVisibleField;
        
        private bool isVisibleFieldSpecified;
        
        private string isVisiblePathField;
        
        private double zPositionField;
        
        private bool zPositionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsVisible {
            get {
                return this.isVisibleField;
            }
            set {
                this.isVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsVisibleSpecified {
            get {
                return this.isVisibleFieldSpecified;
            }
            set {
                this.isVisibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IsVisiblePath {
            get {
                return this.isVisiblePathField;
            }
            set {
                this.isVisiblePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ZPosition {
            get {
                return this.zPositionField;
            }
            set {
                this.zPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZPositionSpecified {
            get {
                return this.zPositionFieldSpecified;
            }
            set {
                this.zPositionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextRun))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineBreak))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public abstract partial class Run {
        
        private FontStyle fontStyleField;
        
        private bool fontStyleFieldSpecified;
        
        private double emSizeField;
        
        private bool emSizeFieldSpecified;
        
        private string fontNameField;
        
        private bool isVisibleField;
        
        private bool isVisibleFieldSpecified;
        
        private string isVisiblePathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontStyle FontStyle {
            get {
                return this.fontStyleField;
            }
            set {
                this.fontStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified {
            get {
                return this.fontStyleFieldSpecified;
            }
            set {
                this.fontStyleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EmSize {
            get {
                return this.emSizeField;
            }
            set {
                this.emSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmSizeSpecified {
            get {
                return this.emSizeFieldSpecified;
            }
            set {
                this.emSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsVisible {
            get {
                return this.isVisibleField;
            }
            set {
                this.isVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsVisibleSpecified {
            get {
                return this.isVisibleFieldSpecified;
            }
            set {
                this.isVisibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IsVisiblePath {
            get {
                return this.isVisiblePathField;
            }
            set {
                this.isVisiblePathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public enum FontStyle {
        
        /// <remarks/>
        Regular,
        
        /// <remarks/>
        Bold,
        
        /// <remarks/>
        Italic,
        
        /// <remarks/>
        BoldItalic,
        
        /// <remarks/>
        Underline,
        
        /// <remarks/>
        Strikeout,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public partial class TextRun : Run {
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Text", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("TextPath", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        TextPath,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public partial class LineBreak : Run {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public partial class TextElement : BaseElement {
        
        private TextElementParagraph[] paragraphField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Paragraph")]
        public TextElementParagraph[] Paragraph {
            get {
                return this.paragraphField;
            }
            set {
                this.paragraphField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public partial class TextElementParagraph {
        
        private Run[] itemsField;
        
        private bool isVisibleField;
        
        private bool isVisibleFieldSpecified;
        
        private string isVisiblePathField;
        
        private FontStyle fontStyleField;
        
        private bool fontStyleFieldSpecified;
        
        private double emSizeField;
        
        private bool emSizeFieldSpecified;
        
        private string fontNameField;
        
        private double linespacingField;
        
        private string beforeParagraphField;
        
        private string afterParagraphField;
        
        private Alignment alignmentField;
        
        private bool alignmentFieldSpecified;
        
        public TextElementParagraph() {
            this.linespacingField = 1D;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LineBreak", typeof(LineBreak))]
        [System.Xml.Serialization.XmlElementAttribute("Run", typeof(TextRun))]
        public Run[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsVisible {
            get {
                return this.isVisibleField;
            }
            set {
                this.isVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsVisibleSpecified {
            get {
                return this.isVisibleFieldSpecified;
            }
            set {
                this.isVisibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IsVisiblePath {
            get {
                return this.isVisiblePathField;
            }
            set {
                this.isVisiblePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontStyle FontStyle {
            get {
                return this.fontStyleField;
            }
            set {
                this.fontStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified {
            get {
                return this.fontStyleFieldSpecified;
            }
            set {
                this.fontStyleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EmSize {
            get {
                return this.emSizeField;
            }
            set {
                this.emSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmSizeSpecified {
            get {
                return this.emSizeFieldSpecified;
            }
            set {
                this.emSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(1D)]
        public double Linespacing {
            get {
                return this.linespacingField;
            }
            set {
                this.linespacingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BeforeParagraph {
            get {
                return this.beforeParagraphField;
            }
            set {
                this.beforeParagraphField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AfterParagraph {
            get {
                return this.afterParagraphField;
            }
            set {
                this.afterParagraphField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Alignment Alignment {
            get {
                return this.alignmentField;
            }
            set {
                this.alignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlignmentSpecified {
            get {
                return this.alignmentFieldSpecified;
            }
            set {
                this.alignmentFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://raw.githubusercontent.com/LokiMidgard/PdfGenerator/master/PdfGenerator/XM" +
        "LImport.xsd")]
    public enum Alignment {
        
        /// <remarks/>
        Near,
        
        /// <remarks/>
        Center,
        
        /// <remarks/>
        Far,
    }
}
